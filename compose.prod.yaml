services:
  database-keys:
    image: depop/openssl-bats
    container_name: w80-prod-database-keys
    volumes:
      - mongo-keys:/mongo-conf
    command: 'bash -c "openssl rand -base64 741 > /mongo-conf/mongodb-keyfile; chmod 600 /mongo-conf/mongodb-keyfile; chown 999 /mongo-conf/mongodb-keyfile"'
  database:
    image: mongo:7.0.11
    container_name: w80-prod-database
    command: [--replSet, rs0, --bind_ip_all, --keyFile, "/opt/keyfile/mongodb-keyfile"]
    ports:
      - ${DBPORT}:27017
    volumes:
      - /app/data:/data/db
      - mongo-keys:/opt/keyfile
    environment:
      - MONGO_INITDB_DATABASE=${W80_Database__Name}
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
    depends_on:
      - database-keys
    healthcheck:
      test: echo "try { rs.status() } catch (err) { rs.initiate({_id:'rs0',members:[{_id:0,host:'database'}]}) }" | mongosh -u ${MONGO_INITDB_ROOT_USERNAME} -p ${MONGO_INITDB_ROOT_PASSWORD} --authenticationDatabase admin
      interval: 5s
      timeout: 15s
      start_period: 15s
      retries: 10
  database_seeder:
    image: mongo:7.0.11
    container_name: w80-prod-database-seeder
    depends_on:
      database:
        condition: service_healthy
    volumes:
      - ./db:/tmp/db/
    environment:
      - MONGO_INITDB_DATABASE=${W80_Database__Name}
      - MONGOIMPORT_HOST_STRING=rs0/database
      - MONGOIMPORT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGOIMPORT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
      - MONGOSH_CONNECTIONSTRING=mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@database
    command: >
      bash -c 'bash /tmp/db/import/import.sh'
  server:
    container_name: w80-prod-server
    build:
      context: ./src/server/
    ports:
      - ${APIPORT}:8080
    depends_on:
      - database
      - database_seeder
    volumes:
      - /app/logs/:/api/logs
    environment:
      ASPNETCORE_ENVIRONMENT: ${ASPNETCORE_ENVIRONMENT}
      W80_Jwt__Key: ${W80_Jwt__Key}
      W80_CaptchaKey: ${W80_CaptchaKey}
      W80_InvitationKey: ${W80_InvitationKey}
      W80_EmailConfirmationKey: ${W80_EmailConfirmationKey}
      W80_Notifications__EmailSenderKEy: ${W80_Notifications__EmailSenderKey}
      W80_Database__Name: ${W80_Database__Name}
      W80_Database__ConnectionString: mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@database
  webapp:
    container_name: w80-prod-webapp
    build:
      context: ./src/webapp/
      args:
        - REACT_APP_BASE_API=${REACT_APP_BASE_API}
        - REACT_APP_TIMEOUT_IN_MILLISECONDS=${REACT_APP_TIMEOUT_IN_MILLISECONDS}
        - REACT_APP_CAPTCHA_SITE_KEY=${REACT_APP_CAPTCHA_SITE_KEY}
        - REACT_APP_NOTIFICATION_CHECK_IN_MILLISECONDS=${REACT_APP_NOTIFICATION_CHECK_IN_MILLISECONDS}
        - REACT_APP_BROWSER_NOTIFICATIONS_THRESHOLD_IN_MINUTES=${REACT_APP_BROWSER_NOTIFICATIONS_THRESHOLD_IN_MINUTES}
    ports:
      - ${PORT}:80
    depends_on:
      - database
      - database_seeder
      - server
volumes:
  mongo-keys:
